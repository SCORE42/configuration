- name: clone the xml course repo
  git: >
    repo="{{ item.repo_url }}"
    dest="{{ edxapp_course_data_dir }}/{{ item.repo_name }}"
    version="{{ item.version }}"
    accept_hostkey=True
  sudo_user: "{{ edxapp_user }}"
  environment:
    GIT_SSH: "{{ edxapp_git_ssh }}"
  with_items: EDXAPP_XML_COURSES

- name: update course.xml
  template: >
    src=course.xml.j2
    dest="{{ edxapp_course_data_dir }}/{{ item.repo_name }}/course.xml"
  sudo_user: "{{ edxapp_user }}"
  with_items: EDXAPP_XML_COURSES

- name: make static symlinks
  file: >
    src="{{ edxapp_course_data_dir }}/{{ item.repo_name }}/static"
    dest="{{ edxapp_course_static_dir }}/{{ item.repo_name}}"
  with_items: EDXAPP_XML_COURSES
  when: item.disposition == "on disk" or item.disposition == "no static import"

- name: import courses with nostatic flag
  shell: >
    {{ edxapp_venv_bin }}/python manage.py cms --settings=aws import --nostatic {{ edxapp_course_data_dir }} {{ item.repo_name }}
    chdir="{{ edxapp_code_dir }}"
  sudo_user: "{{ edxapp_user }}"
  with_items: EDXAPP_XML_COURSES
  when: item.disposition == "no static import"
  
- name: import courses including static data
  shell: >
    {{ edxapp_venv_bin }}/python manage.py cms --settings=aws import {{ edxapp_course_data_dir }} {{ item.repo_name }}
    chdir="{{ edxapp_code_dir }}"
  sudo_user: "{{ edxapp_user }}"
  with_items: EDXAPP_XML_COURSES
  when: item.disposition == "import"

- name: delete courses that were fully imported
  file: src="{{ edxapp_coure_data_dir }}/{{ item.repo_name }}" state=absent
  with_items: EDXAPP_XML_COURSES
  when: item.disposition == "import"

- name: create an archive of course data and course static dirs
  shell: tar cvzf /tmp/static_course_content.tar.gz -C {{ edxapp_data_dir }} {{ edxapp_course_data_dir|basename }} {{ edxapp_course_static_dir|basename }}
  when: EDXAPP_XML_S3_BUCKET is defined and EDXAPP_XML_S3_BUCKET != "" and EDXAPP_XML_S3_KEY is defined and EDXAPP_XML_S3_KEY != ""

- name: upload archive to s3
  s3: >
    bucket="{{ EDXAPP_XML_S3_BUCKET }}"
    object="{{ EDXAPP_XML_S3_KEY }}"
    mode=put
    overwrite=True
    src="/tmp/static_course_content.tar.gz"
  when: EDXAPP_XML_S3_BUCKET is defined and EDXAPP_XML_S3_BUCKET != "" and EDXAPP_XML_S3_KEY is defined and EDXAPP_XML_S3_KEY != ""

- name: remove archive from disk
  file: src="/tmp/static_course_content.tar.gz" state=absent
  when: EDXAPP_XML_S3_BUCKET is defined and EDXAPP_XML_S3_BUCKET != "" and EDXAPP_XML_S3_KEY is defined and EDXAPP_XML_S3_KEY != ""
